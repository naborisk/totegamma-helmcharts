apiVersion: apps/v1
kind: Deployment
metadata:
  name: ccgateway
spec:
  replicas: 1
  selector:
    matchLabels:
      name: ccgateway
  template:
    metadata:
      labels:
        name: ccgateway
    spec:
      containers:
      - name: ccgateway
        image: {{ .Values.ccgateway.image }}
        ports:
          - containerPort: 8080
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        volumeMounts:
          - name: concurrent-config
            mountPath: /etc/concurrent
            readOnly: true
          - name: log-volume
            mountPath: /var/log/concurrent
      - name: agent
        image: grafana/agent
        imagePullPolicy: Always
        volumeMounts:
          - mountPath: /etc/agent/agent.yaml
            name: observability-config
            subPath: agent.yaml
          - name: log-volume
            mountPath: /var/log/concurrent
      volumes:
        - name: log-volume
          emptyDir: {}
        - name: concurrent-config
          projected:
            sources:
              - configMap:
                  name: concurrent-config
                  items:
                    - key: config.yaml
                      path: config.yaml
              - configMap:
                  name: gateway-config
                  items:
                    - key: gateway.yaml
                      path: gateway.yaml
        - name: observability-config
          configMap:
            name: observability-config
            items:
            - key: agent.yaml
              path: agent.yaml
              mode: 0644

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ccapi
spec:
  replicas: 1
  selector:
    matchLabels:
      name: ccapi
  template:
    metadata:
      labels:
        name: ccapi
    spec:
      containers:
      - name: ccapi
        image: {{ .Values.ccapi.image }}
        ports:
          - containerPort: 8000
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 3
          periodSeconds: 3
        volumeMounts:
          - name: concurrent-config
            mountPath: /etc/concurrent
          - name: log-volume
            mountPath: /var/log/concurrent
      - name: agent
        image: grafana/agent
        imagePullPolicy: Always
        volumeMounts:
          - mountPath: /etc/agent/agent.yaml
            name: observability-config
            subPath: agent.yaml
          - name: log-volume
            mountPath: /var/log/concurrent
      volumes:
        - name: log-volume
          emptyDir: {}
        - name: concurrent-config
          configMap:
            name: concurrent-config
            items:
            - key: config.yaml
              path: config.yaml
              mode: 0644
        - name: observability-config
          configMap:
            name: observability-config
            items:
            - key: agent.yaml
              path: agent.yaml
              mode: 0644

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ccactivitypub
spec:
  replicas: 1
  selector:
    matchLabels:
      name: ccactivitypub
  template:
    metadata:
      labels:
        name: ccactivitypub
    spec:
      containers:
      - name: ccactivitypub
        image: {{ .Values.ccactivitypub.image }}
        ports:
          - containerPort: 8000
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 3
          periodSeconds: 3
        volumeMounts:
          - name: concurrent-config
            mountPath: /etc/concurrent
          - name: log-volume
            mountPath: /var/log/concurrent
      - name: agent
        image: grafana/agent
        imagePullPolicy: Always
        volumeMounts:
          - mountPath: /etc/agent/agent.yaml
            name: observability-config
            subPath: agent.yaml
          - name: log-volume
            mountPath: /var/log/concurrent
      volumes:
        - name: log-volume
          emptyDir: {}
        - name: concurrent-config
          projected:
            sources:
              - configMap:
                  name: concurrent-config
                  items:
                    - key: config.yaml
                      path: config.yaml
              - configMap:
                  name: activitypub-config
                  items:
                    - key: activitypub.yaml
                      path: activitypub.yaml
        - name: observability-config
          configMap:
            name: observability-config
            items:
            - key: agent.yaml
              path: agent.yaml
              mode: 0644

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ccwebui
spec:
  replicas: 1
  selector:
    matchLabels:
      name: ccwebui
  template:
    metadata:
      labels:
        name: ccwebui
    spec:
      containers:
      - name: ccwebui
        image: {{ .Values.ccwebui.image }}
        ports:
          - containerPort: 80
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /web/index.html
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 3

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: concurrent-db
spec:
  replicas: 1
  selector:
    matchLabels:
      name: concurrent-db
  template:
    metadata:
      labels:
        name: concurrent-db
    spec:
      containers:
      - name: posgresql
        image: postgres
        ports:
          - containerPort: 5432
        imagePullPolicy: IfNotPresent
        env:
          - name: POSTGRES_USER
            value: postgres
          - name: POSTGRES_PASSWORD
            value: postgres
          - name: POSTGRES_DB
            value: concurrent
        volumeMounts:
          - name: postgres-varlib
            mountPath: /var/lib/postgresql
      volumes:
        - name: postgres-varlib
          persistentVolumeClaim:
            claimName: postgres-varlib

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: concurrent-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      name: concurrent-redis
  template:
    metadata:
      labels:
        name: concurrent-redis
    spec:
      containers:
      - name: redis
        image: redis
        ports:
          - containerPort: 6379
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: redis-data
            mountPath: /data
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-data

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: concurrent-memcached
spec:
  replicas: 1
  selector:
    matchLabels:
      name: concurrent-memcached
  template:
    metadata:
      labels:
        name: concurrent-memcached
    spec:
      containers:
      - name: memcached
        image: memcached
        ports:
          - containerPort: 11211
        imagePullPolicy: IfNotPresent

---
{{ if .Values.mediaserver.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mediaserver
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mediaserver
  template:
    metadata:
      labels:
        name: mediaserver
    spec:
      containers:
      - name: mediaserver
        image: {{ .Values.mediaserver.image }}
        ports:
          - containerPort: 8000
        imagePullPolicy: IfNotPresent
        env:
          - name: bucketName
            value: {{ .Values.mediaserver.bucketname | quote }}
          - name: accountId
            value: {{ .Values.mediaserver.accountId | quote }}
          - name: accessKeyId
            value: {{ .Values.mediaserver.accessKeyId | quote }}
          - name: accessKeySecret
            value: {{ .Values.mediaserver.accessKeySecret | quote }}
          - name: publicBaseUrl
            value: {{ .Values.mediaserver.publicBaseUrl | quote }}
          - name: db_dsn
            value: {{ .Values.server.dsn | quote }}
          - name: quota
            value: {{ .Values.mediaserver.quota | quote }}

{{ end }}

